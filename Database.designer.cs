#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     Этот код создан программой.
//     Исполняемая версия:4.0.30319.42000
//
//     Изменения в этом файле могут привести к неправильной работе и будут потеряны в случае
//     повторной генерации кода.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ParserApp
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="PARSERDB")]
	public partial class DatabaseDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Определения метода расширяемости
    partial void OnCreated();
    partial void InsertКурс(Курс instance);
    partial void UpdateКурс(Курс instance);
    partial void DeleteКурс(Курс instance);
    #endregion
		
		public DatabaseDataContext() : 
				base(global::ParserApp.Properties.Settings.Default.PARSERDBConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public DatabaseDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DatabaseDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DatabaseDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DatabaseDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Курс> Курс
		{
			get
			{
				return this.GetTable<Курс>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Курс")]
	public partial class Курс : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.DateTime _дата;
		
		private string _валюта;
		
		private float _курс1;
		
    #region Определения метода расширяемости
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnдатаChanging(System.DateTime value);
    partial void OnдатаChanged();
    partial void OnвалютаChanging(string value);
    partial void OnвалютаChanged();
    partial void OnкурсChanging(float value);
    partial void OnкурсChanged();
    #endregion
		
		public Курс()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_дата", DbType="DateTime NOT NULL")]
		public System.DateTime дата
		{
			get
			{
				return this._дата;
			}
			set
			{
				if ((this._дата != value))
				{
					this.OnдатаChanging(value);
					this.SendPropertyChanging();
					this._дата = value;
					this.SendPropertyChanged("дата");
					this.OnдатаChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_валюта", DbType="NChar(3) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string валюта
		{
			get
			{
				return this._валюта;
			}
			set
			{
				if ((this._валюта != value))
				{
					this.OnвалютаChanging(value);
					this.SendPropertyChanging();
					this._валюта = value;
					this.SendPropertyChanged("валюта");
					this.OnвалютаChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_курс1", DbType="Real NOT NULL")]
		public float курс
		{
			get
			{
				return this._курс1;
			}
			set
			{
				if ((this._курс1 != value))
				{
					this.OnкурсChanging(value);
					this.SendPropertyChanging();
					this._курс1 = value;
					this.SendPropertyChanged("курс");
					this.OnкурсChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
